[
  {
    "Id": "723103",
    "ThreadId": "285634",
    "Html": "\r\n<p>Hi,</p>\r\n<p>&nbsp;</p>\r\n<p>I'm new here and new(ish) to C#, but a long time C&#43;&#43; dev. I started going through this excellent tutorial, as I'll need to help build an ASP.NET app using MVC. It's on a very out of date intranet, and we'll not be able to use EF 4 and .NET 4.</p>\r\n<p>&nbsp;</p>\r\n<p>Anyway, I had real problems today with the editing of albums as the drop down list values for artist and genre were not being saved. I noticed that there have been a few older posts on this - the answer being genereally &quot;it's because older EF doesn't include\r\n FK id, just the object, please use a newer version&quot;</p>\r\n<p>&nbsp;</p>\r\n<p>Sooooo after about 4 hours now, I've got it to work, and it's pretty simple, and I thought I'd post it here in case anyone is in the same situation</p>\r\n<p>First, you need to make a partial class of Album to contain the FK properties:</p>\r\n<p>&nbsp;</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre> <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> Album\r\n   {\r\n       <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> ArtistID\r\n       {\r\n           <span style=\"color:blue\">get</span>\r\n           {\r\n               <span style=\"color:blue\">if</span> (<span style=\"color:blue\">this</span>.Artist != <span style=\"color:blue\">null</span>)\r\n                   <span style=\"color:blue\">return</span> <span style=\"color:blue\">this</span>.Artist.ArtistId;\r\n               <span style=\"color:blue\">else</span>\r\n                   <span style=\"color:blue\">return</span> 0;\r\n           }\r\n           <span style=\"color:blue\">set</span>\r\n           {\r\n               <span style=\"color:blue\">this</span>.ArtistReference.EntityKey = <span style=\"color:blue\">new</span> System.Data.EntityKey(<span style=\"color:#a31515\">&quot;MusicStoreEntities2.Album&quot;</span>, <span style=\"color:#a31515\">&quot;ArtistID&quot;</span>, value);\r\n           }\r\n\r\n       }\r\n\r\n\r\n       <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> GenreID\r\n       {\r\n           <span style=\"color:blue\">get</span>\r\n           {\r\n               <span style=\"color:blue\">if</span> (<span style=\"color:blue\">this</span>.Genre != <span style=\"color:blue\">null</span>)\r\n                   <span style=\"color:blue\">return</span> <span style=\"color:blue\">this</span>.Genre.GenreId;\r\n               <span style=\"color:blue\">else</span>\r\n                   <span style=\"color:blue\">return</span> 0;\r\n           }\r\n           <span style=\"color:blue\">set</span>\r\n           {\r\n               <span style=\"color:blue\">this</span>.GenreReference.EntityKey = <span style=\"color:blue\">new</span> System.Data.EntityKey(<span style=\"color:#a31515\">&quot;MusicStoreEntities2.Album&quot;</span>, <span style=\"color:#a31515\">&quot;GenreID&quot;</span>, value);\r\n           }\r\n\r\n       }\r\n</pre>\r\n</div>\r\nThen in the StoreManagerController, you need to extract the album as before, but this time from the formcollection, update the Album with the Genre and Artist objects, drawn from the DB using the selected ID's.\r\n<p></p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>[HttpPost]\r\n        <span style=\"color:blue\">public</span> ActionResult Edit(<span style=\"color:blue\">int</span> id, FormCollection formValues)\r\n        {\r\n            <span style=\"color:blue\">var</span> album = storeDB.Albums.First(a =&gt; a.AlbumId == id);\r\n\r\n            <span style=\"color:blue\">string</span> GenreKey = formValues[<span style=\"color:#a31515\">&quot;album.GenreId&quot;</span>];\r\n            <span style=\"color:blue\">string</span> ArtistKey = formValues[<span style=\"color:#a31515\">&quot;album.ArtistId&quot;</span>];\r\n\r\n            <span style=\"color:blue\">int</span> GInt = Convert.ToInt32(GenreKey);\r\n            <span style=\"color:blue\">int</span> AInt = Convert.ToInt32(GenreKey);\r\n            \r\n            <span style=\"color:blue\">var</span> GenrePicked = storeDB.Genres.First(g =&gt; g.GenreId == GInt);\r\n            <span style=\"color:blue\">var</span> ArtistPicked = storeDB.Artists.First(g =&gt; g.ArtistId == AInt);      \r\n           \r\n\r\n            album.Artist = ArtistPicked;\r\n            album.Genre = GenrePicked;\r\n\r\n            <span style=\"color:blue\">try</span>\r\n            {\r\n                TryUpdateModel(album, <span style=\"color:#a31515\">&quot;Album&quot;</span>);\r\n                storeDB.SaveChanges();\r\n                <span style=\"color:blue\">return</span> RedirectToAction(<span style=\"color:#a31515\">&quot;Index&quot;</span>);\r\n            }\r\n            <span style=\"color:blue\">catch</span>\r\n            {\r\n                <span style=\"color:blue\">var</span> viewModel = <span style=\"color:blue\">new</span> StoreManagerViewModel\r\n                {\r\n                    album = album,\r\n                    Genres = storeDB.Genres.ToList(),\r\n                    Artists = storeDB.Artists.ToList()\r\n                };\r\n                <span style=\"color:blue\">return</span> View(viewModel);\r\n            }\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>Also, I used TryUpdateModel instead of UpdateModel as it doesn't throw an exception when unexpected properties are found.</p>\r\n<p>&nbsp;</p>\r\n<p>I'm sure there's a better way of doing this, but I couldn't find an answer in the other posts.</p>\r\n<p>&nbsp;</p>\r\n<p>HTH</p>\r\n<p>&nbsp;</p>\r\n<p>Richard</p>\r\n",
    "PostedDate": "2012-01-10T06:28:07.823-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "723130",
    "ThreadId": "285634",
    "Html": "<p>... of course, using the FormCollection with the name strings makes maintenance a headache, so hopefully someone with a better solution will chime in!</p>",
    "PostedDate": "2012-01-10T06:54:51.463-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
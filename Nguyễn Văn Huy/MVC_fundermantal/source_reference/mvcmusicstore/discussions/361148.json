[
  {
    "Id": "854450",
    "ThreadId": "361148",
    "Html": "\r\n<p>By adding the following code into album.cs , you can validate between fields within the model at an object level ( especially useful for dates ...is date 1 later than date 2 ?)&nbsp;</p>\r\n<p>1<span style=\"white-space:pre\"> </span>Change&nbsp;</p>\r\n<p style=\"padding-left:30px\"><em>public class Album</em></p>\r\n<p>to&nbsp;</p>\r\n<p style=\"padding-left:30px\"><em>public class Album : <strong>IValidatableObject &nbsp;&nbsp;</strong></em></p>\r\n<p>add the following code after any real or virtual getters &amp; setters &nbsp;</p>\r\n<p>( In some versions that is&nbsp;<em>public string AlbumArtUrl { get; set; }</em></p>\r\n<p>in others it s&nbsp;<em>&nbsp;public virtual List&lt;OrderDetail&gt; OrderDetails { get; set; })</em></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;public IEnumerable&lt;ValidationResult&gt; Validate(ValidationContext validationContext)&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>{&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (this.field1 &gt; this.field2)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p><span style=\"white-space:pre\">&nbsp;</span>{&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p><span style=\"white-space:pre\">&nbsp;</span>yield return new ValidationResult(&quot;This has tripped validation result 1 &quot;);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p><span style=\"white-space:pre\">&nbsp;</span>}</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (&nbsp; if (this.field4 &gt; this.field4) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;) &nbsp; &nbsp;&nbsp;</p>\r\n<p>{&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>yield return new ValidationResult(&quot;This has tripped validation result 2&quot;);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>}&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n<p>If any one has any ideas how to extend this validation with a query to see if if I have already got this album by this artist, then I'd be grateful,&nbsp;</p>\r\n",
    "PostedDate": "2012-06-27T09:32:19.263-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
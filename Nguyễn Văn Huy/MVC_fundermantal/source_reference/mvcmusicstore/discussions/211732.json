[
  {
    "Id": "439618",
    "ThreadId": "211732",
    "Html": "<p>I've gone through the tutorial up to the Membership part. I came across a few problems and have some questions:</p>\r\n<ul>\r\n<li>One problem is already being discussed here: <a href=\"http://mvcmusicstore.codeplex.com/Thread/View.aspx?ThreadId=211450\">http://mvcmusicstore.codeplex.com/Thread/View.aspx?ThreadId=211450</a></li>\r\n<li>Page 38: If we change the generated partial class, then our changes get overwritten once we change something on the designer. I didn't think it's good practice to change generated code? You could achieve the same thing by just changing the &quot;Entity Container Name&quot; property in the Properties window (F4) of the whole Entity Model to &quot;MusicStoreEntities&quot;</li>\r\n<li>Page 40: The parameter passed to the Browse method is (string genre). The document doesn't explain this change? If you look back to Page 16, the method didn't have any parameters and the genre was taken from Request.QueryString. This could confuse people.</li>\r\n<li>Page 43: In the StoreManager Index method, the code is &quot;return View(storeDB.Alums);&quot; shouldn't this be &quot;return View(albums);&quot;??? If not, then we've just wasted our time with the LINQ extension (i.e. the albums parameter is not being used).</li>\r\n<li>Page 53: Mentions second and third parameters, but there is no third parameter set on Html.EditorFor (only two, and the second parameter is made up of two parts)</li>\r\n<li>Page 57: It would be good if the document explained why you can just change the &quot;FormCollection&quot; parameter to &quot;Album&quot; on the Create method. I didn't fully understand this.</li>\r\n<li>Page 59: Same deal with the Delete method and changing the FormCollection parameter to a string</li>\r\n</ul>\r\n<p>Hope this helps.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-05-05T18:57:12.907-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "441329",
    "ThreadId": "211732",
    "Html": "<p>Thanks for the feedback, @<a id=\"ctl00_ctl00_MasterContent_Content_PostRepeater_ctl00_UserNameLink\" href=\"http://www.codeplex.com/site/users/view/aboreham\">aboreham</a>! Will update the document with fixes and clarifications.</p>\r\n<p>One thing I wanted to mention - generally it is a bad idea to change the logic of the generated EF model since it will be overwritten if you update the model. However, changing a class is a pretty minimal change. If you regenerated your model and your app broke because you forgot to set or change the class name, it would be immediately obvious what you needed to do next. We also showed the rename to illustrate that the EF model is <em>just</em> a CLR class, which is reassuring.</p>",
    "PostedDate": "2010-05-10T23:32:26.6-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
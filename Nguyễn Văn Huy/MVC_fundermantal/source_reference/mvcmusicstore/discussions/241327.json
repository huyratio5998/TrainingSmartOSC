[
  {
    "Id": "547372",
    "ThreadId": "241327",
    "Html": "\r\n<p>I don't get the Truncate when typing &quot;Html.&quot; What could be the problem?</p>\r\n<p>&lt;td&gt;&lt;%: Html.Truncate(item.Title, 25) %&gt;&lt;/td&gt;</p>\r\n<p>Regard.</p>\r\n",
    "PostedDate": "2011-01-11T09:02:03.41-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "547430",
    "ThreadId": "241327",
    "Html": "\r\n<p>Can you verify that you've correctly added the namespace as indicated on page 67, and that the namespace exactly matches the one used for the helper on page 66 (including capitalization)?</p>\r\n",
    "PostedDate": "2011-01-11T10:44:32.967-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "547847",
    "ThreadId": "241327",
    "Html": "\r\n<p>I made it work by doing this:</p>\r\n<p>&lt;%: HtmlHelpers.Truncate(item.Title, 25) %&gt;</p>\r\n<p>Is that correct? As you can see, I don't have a HTML class with Truncate method. I instead have HtmlHelpers class with a Truncate method&nbsp;</p>\r\n<p>that was receiving three parameters and I had to change to two parameters in order for this to work properly.&nbsp;</p>\r\n",
    "PostedDate": "2011-01-12T01:13:53.403-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "567425",
    "ThreadId": "241327",
    "Html": "<p>I had same problem as you mentioned.</p>\n<p>&nbsp;I fixed my problem by deleting all the \"using statements\"&nbsp;then&nbsp;put \"<span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\"><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\"><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\"><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">using </span></span></span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">System.Web.Mvc;\" in </span></span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\"><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\"><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">HtmlHelpers.cs</span></span></span></p>\n<p><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\"><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\"><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\"><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">&nbsp;</span></span></span></span></p>\n<p>&nbsp;</p>",
    "PostedDate": "2011-02-16T13:45:09.103-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "571989",
    "ThreadId": "241327",
    "Html": "<p>Glad that worked for you, Kevin. I will move that to use the new Razor helper syntax for the next release, which should make this simpler.</p>",
    "PostedDate": "2011-02-25T00:31:50.51-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "575985",
    "ThreadId": "241327",
    "Html": "<p>Since the HtmlHelper isn't actually&nbsp;used in the Truncate&nbsp;implementation,&nbsp;it should be a string extension:</p>\n<pre style=\"font-family: Consolas; background: white; color: black; font-size: 13px;\"><span style=\"color: blue;\">namespace</span>&nbsp;<span style=\"color: maroon;\">MvcMusicStore</span>.<span style=\"color: maroon;\">Helpers</span>&nbsp;{\r\n \r\n\t<span style=\"color: blue;\">public</span>&nbsp;<span style=\"color: blue;\">static</span>&nbsp;<span style=\"color: blue;\">class</span>&nbsp;<span style=\"color: maroon;\">StringHelpers</span>&nbsp;{\r\n \r\n\t\t<span style=\"color: blue;\">public</span>&nbsp;<span style=\"color: blue;\">static</span>&nbsp;<span style=\"color: blue;\">string</span>&nbsp;<span style=\"color: maroon;\">Truncate</span>(<span style=\"color: blue;\">this</span>&nbsp;<span style=\"color: blue;\">string</span>&nbsp;<span style=\"color: maroon;\">input</span>,&nbsp;<span style=\"color: blue;\">int</span>&nbsp;<span style=\"color: maroon;\">length</span>)&nbsp;{\r\n\t\t\t<span style=\"color: blue;\">if</span>&nbsp;(&nbsp;<span style=\"color: maroon;\">input != null</span>&nbsp;&amp;&amp;&nbsp;<span style=\"color: maroon;\">input</span>.<span style=\"color: maroon;\">Length</span>&nbsp;&gt;&nbsp;<span style=\"color: maroon;\">length</span>&nbsp;)\r\n\t\t\t\t<span style=\"color: blue;\">return</span>&nbsp;<span style=\"color: maroon;\">input</span>.<span style=\"color: maroon;\">Substring</span>(0,&nbsp;<span style=\"color: maroon;\">length</span>)&nbsp;+&nbsp;<span style=\"color: teal;\">\"...\"</span>;\r\n\t\t\t<span style=\"color: blue;\">else</span>\r\n\t\t\t\t<span style=\"color: blue;\">return</span>&nbsp;<span style=\"color: maroon;\">input</span>;\r\n\t\t}\r\n\t}\r\n}</pre>\n<pre style=\"font-family: Consolas; background: white; color: black; font-size: 13px;\">Then the code in question becomes:</pre>\n<pre style=\"font-family: Consolas; background: white; color: black; font-size: 13px;\">\t\t\t<span style=\"color: blue;\">&lt;</span><span style=\"color: maroon;\">td</span><span style=\"color: blue;\">&gt;</span><span style=\"background: yellow;\">@</span><span style=\"color: maroon;\">item</span>.<span style=\"color: maroon;\">Title</span>.<span style=\"color: maroon;\">Truncate</span>(25)<span style=\"color: blue;\">&lt;/</span><span style=\"color: maroon;\">td</span><span style=\"color: blue;\">&gt;</span>\r\n\t\t\t<span style=\"color: blue;\">&lt;</span><span style=\"color: maroon;\">td</span><span style=\"color: blue;\">&gt;</span><span style=\"background: yellow;\">@</span><span style=\"color: maroon;\">item</span>.<span style=\"color: maroon;\">Artist</span>.<span style=\"color: maroon;\">Name</span>.<span style=\"color: maroon;\">Truncate</span>(25)<span style=\"color: blue;\">&lt;/</span><span style=\"color: maroon;\">td</span><span style=\"color: blue;\">&gt;</span>\r\n\t\t\t<span style=\"color: blue;\">&lt;</span><span style=\"color: maroon;\">td</span><span style=\"color: blue;\">&gt;</span><span style=\"background: yellow;\">@</span><span style=\"color: maroon;\">item</span>.<span style=\"color: maroon;\">Genre</span>.<span style=\"color: maroon;\">Name</span><span style=\"color: blue;\">&lt;/</span><span style=\"color: maroon;\">td</span><span style=\"color: blue;\">&gt;</span>\r\n</pre>",
    "PostedDate": "2011-03-05T05:11:36.077-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "586229",
    "ThreadId": "241327",
    "Html": "<p>@Aldo - A string extension will work, but the goal for the tutorial's sake was to show how to create a custom HTML Helper. You can create a string extension, but the advantage of writing an HTML Helper is that it's more discoverable within the view.</p>",
    "PostedDate": "2011-03-25T00:42:33.793-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "586230",
    "ThreadId": "241327",
    "Html": "<p>I wrote up some additional info on HTML Helpers based on some common questions here:&nbsp;<a href=\"http://weblogs.asp.net/jgalloway/archive/2011/03/23/comparing-mvc-3-helpers-using-extension-methods-and-declarative-razor-helper.aspx\">http://weblogs.asp.net/jgalloway/archive/2011/03/23/comparing-mvc-3-helpers-using-extension-methods-and-declarative-razor-helper.aspx</a></p>\r\n<p>I'll probably move to Razor HTML Helper syntax for the next release, since they're a little easier to set up and use.</p>",
    "PostedDate": "2011-03-25T00:44:10.42-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "593150",
    "ThreadId": "241327",
    "Html": "This discussion has been copied to a work item. Click <a href=\"http://mvcmusicstore.codeplex.com/workitem/6638\">here</a> to go to the work item and continue the discussion.",
    "PostedDate": "2011-04-06T15:25:00.607-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
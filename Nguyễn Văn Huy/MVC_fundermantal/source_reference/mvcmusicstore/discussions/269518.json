[
  {
    "Id": "659826",
    "ThreadId": "269518",
    "Html": "\r\n<p>I have question regarding what the contents of the Cart Table should look like after an Order has been placed.</p>\r\n<p>Currently, after an order is placed, the Cart Table shows up completely empty. I ran some debugging, and found that while the shopping cart is filled and you are on the CheckoutController, the Cart Table has itmes inside it. Once the transaction is complete\r\n the table has nothing in it.</p>\r\n<p>Only thing I do know is that:</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\"><pre><div style=\"color:black; background-color:white\"><pre>        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> CreateOrder(Order order)\r\n        {\r\n            <span style=\"color:blue\">decimal</span> orderTotal = 0;\r\n\r\n            <span style=\"color:blue\">var</span> cartItems = GetCartItems();\r\n            <span style=\"color:green\">// Iterate over the items in the cart, </span>\r\n            <span style=\"color:green\">// adding the order details for each</span>\r\n            <span style=\"color:blue\">foreach</span> (<span style=\"color:blue\">var</span> item <span style=\"color:blue\">in</span> cartItems)\r\n            {\r\n                <span style=\"color:blue\">var</span> orderDetail = <span style=\"color:blue\">new</span> OrderDetail\r\n                {\r\n                    ProductId = item.ProductId,\r\n                    OrderId = order.OrderId,\r\n                    UnitPrice = item.Product.ProductPrice,\r\n                    Quantity = item.Count\r\n                };\r\n                <span style=\"color:green\">// Set the order total of the shopping cart</span>\r\n                orderTotal &#43;= (item.Count * item.Product.ProductPrice);\r\n\r\n                EchoJobsClassesDataContext.OrderDetails.Add(orderDetail);\r\n\r\n            }\r\n            <span style=\"color:green\">// Set the order's total to the orderTotal count</span>\r\n            order.Total = orderTotal;\r\n\r\n            <span style=\"color:green\">// Save the order</span>\r\n            EchoJobsClassesDataContext.SaveChanges();\r\n            <span style=\"color:green\">// Empty the shopping cart</span>\r\n            EmptyCart();\r\n            <span style=\"color:green\">// Return the OrderId as the confirmation number</span>\r\n            <span style=\"color:blue\">return</span> order.OrderId;\r\n        }\r\n</pre>\r\n</div>\r\n<br></pre>\r\nAt the EmptyCart();<br><br>This table is getting cleared of everything in it. What is wrong or right?<br></span></pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-08-18T00:32:32-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "659969",
    "ThreadId": "269518",
    "Html": "<p>@Casegi:</p>\r\n<p>First off thanks for responding.</p>\r\n<p>That is exactly what I was thinking, since in the tutorial there was a line which implicitly stated that the shopping cart would be emptied. In my thought process it was just a placeholder, but wanted to confirm, if there was any additional use, if we were to store the information. In other words how else could all that shopping cart information be used.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-08-18T05:37:33.943-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "667027",
    "ThreadId": "269518",
    "Html": "<p>Exactly, the cart is temporary storage until a user checks out. At that time, we clear the cart so if the user shops for new items they won't purchase the old items again.</p>",
    "PostedDate": "2011-09-02T14:48:59.48-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
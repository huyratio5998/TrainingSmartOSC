{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Closing based on comment \"it is not a bug, please disregard\"",
    "ClosedDate": "2010-07-23T22:22:02.763-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "Hi,\r\n\r\n \r\n\r\nI am on page 53 of tutorial v 0.8, I can't get my Edit view to appear when I click on Edit link. I've checked everything before and after page 53 that relates to editing album information, but no luck. Do you know what I may be missing?\r\n\r\nMy Edit view has Edit album group and a save button and that's it.\r\n\r\nWhen I go with debug I know it goes to album.ascx and passess through the code of label and text field creation...\r\n\r\n \r\n\r\nI've created Album.ascx:\r\n\r\n<%@ Import Namespace=\"MvcMusicStore\" %>\r\n\r\n<%@ Control Language=\"C#\" Inherits=\"System.Web.Mvc.ViewUserControl<MvcMusicStore.Models.Album>\" %>\r\n\r\n\r\n\r\n<p>\r\n    <%: Html.LabelFor(model => model.Title) %>\r\n    <%: Html.TextBoxFor(model => model.Title) %>\r\n    <%: Html.ValidationMessageFor(model => model.Title) %>\r\n</p>          \r\n<p>\r\n    <%: Html.LabelFor(model => model.Price) %>\r\n    <%: Html.TextBoxFor(model => model.Price) %>\r\n    <%: Html.ValidationMessageFor(model => model.Price) %>\r\n</p>         \r\n<p>\r\n    <%: Html.LabelFor(model => model.AlbumArtUrl) %>\r\n    <%: Html.TextBoxFor(model => model.AlbumArtUrl) %>\r\n    <%: Html.ValidationMessageFor(model => model.AlbumArtUrl) %>\r\n</p>\r\n<p>\r\n    <%: Html.LabelFor(model => model.Artist) %>\r\n    <%: Html.DropDownList(\"ArtistId\", new SelectList(ViewData[\"Artist\"] as IEnumerable,\"ArtistId\", \"Name\", Model.ArtistId)) %>\r\n</p>\r\n\r\n<p>\r\n    <%: Html.LabelFor(model => model.Genre) %>\r\n    <%: Html.DropDownList(\"GenreId\", new SelectList(ViewData[\"Genres\"] as IEnumerable,\r\n    \"GenreId\", \"Name\", Model.GenreId)) %>\r\n</p>\r\n            \r\n\r\nMy StoreManagerController looks like that:  //\r\n        // GET: /StoreManager/Edit/5\r\n \r\n        public ActionResult Edit(int id)\r\n        {\r\n            var viewModel = new StoreManagerViewModel\r\n            {\r\n                Album = storeDB.Albums.Single(a => a.AlbumId == id),\r\n                Genres = storeDB.Genres.ToList(),\r\n                Artists = storeDB.Artists.ToList()\r\n            };\r\n\r\n            return View(viewModel);\r\n        }\r\n\r\n        //\r\n        // POST: /StoreManager/Edit/5\r\n\r\n        [HttpPost]\r\n        public ActionResult Edit(int id, FormCollection formValues)\r\n        {\r\n            var album = storeDB.Albums.Single(a => a.AlbumId == id);\r\n\r\n            try\r\n            {\r\n                //Save album\r\n\r\n                UpdateModel(album, \"Album\");\r\n                storeDB.SaveChanges();\r\n \r\n                return RedirectToAction(\"Index\");\r\n            }\r\n            catch\r\n            {\r\n                var viewModel = new StoreManagerViewModel\r\n                {\r\n                    Album = album,\r\n                    Genres = storeDB.Genres.ToList(),\r\n                    Artists = storeDB.Artists.ToList()\r\n                };\r\n\r\n                return View(viewModel);\r\n            }\r\n        }\r\n\r\nAnd I've created Edit view (in StoreManager folder):<%@ Page Language=\"C#\" MasterPageFile=\"~/Views/Shared/Site.Master\" \r\nInherits=\"System.Web.Mvc.ViewPage<MvcMusicStore.ViewModels.StoreManagerViewModel>\" %>\r\n\r\n<asp:Content ID=\"Content1\" ContentPlaceHolderID=\"TitleContent\" runat=\"server\">\r\n\tEdit - <%: Model.Album.Title %>\r\n</asp:Content>\r\n\r\n<asp:Content ID=\"Content2\" ContentPlaceHolderID=\"MainContent\" runat=\"server\">\r\n\r\n    <h2>Edit</h2>\r\n\r\n    <% using (Html.BeginForm()) {%>\r\n        <%: Html.ValidationSummary(true) %>\r\n        \r\n        <fieldset>\r\n            <legend>Edit Album</legend>\r\n                  <% Html.EditorFor(model => model.Album,\r\n                   new { Artist = Model.Artists, Genres = Model.Genres }); %> \r\n<%--            <% Html.DropDownList(\"ArtistId\", new SelectList(ViewData[\"Artists\"] as IEnumerable,\r\n                 \"ArtistId\", \"Name\", Model.ArtistId %>--%>\r\n            <p>\r\n\r\n                <input type=\"submit\" value=\"Save\" />\r\n            </p>\r\n        </fieldset>\r\n\r\n\r\n\r\n    <% } %>\r\n\r\n    <div>\r\n        <%: Html.ActionLink(\"Back to List\", \"Index\") %>\r\n    </div>\r\n\r\n</asp:Content>\r\n\r\n",
    "LastUpdatedDate": "2010-07-23T22:22:02.763-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "mvcmusicstore",
    "ReportedDate": "2010-07-20T22:59:01.38-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Edit view is empty",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 6606
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "It is not actually a bug, please disregard.",
      "PostedDate": "2010-07-21T16:33:34.123-07:00",
      "Id": 14656
    }
  ]
}